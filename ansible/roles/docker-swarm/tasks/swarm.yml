---

# There extra pip dependencies are needed to add SSL SNI support to
# Python version prior to 2.7.9. SNI support is needed by the Ansible
# apt_key module.
- name: Install the Python SNI support packages.
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - pyopenssl
    - ndg-httpsclient
    - pyasn1
  when: ansible_os_family == 'Debian'
    and ansible_python_version | version_compare('2.6.0', '>=')
    and ansible_python_version | version_compare('2.7.9', '<')

- name: Check if "Swarm Mode" is enabled.
  shell: docker info
  changed_when: False
  register: docker_info

- name: Init "Swarm Mode" on the first manager.
  shell: docker swarm init
        --listen-addr {{ docker_swarm_listen_addr }}:{{ docker_swarm_port }}
        --advertise-addr {{ docker_swarm_advertise_addr }}
  when: "docker_info.stdout.find('Swarm: active') == -1
    and inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Get the worker join-token.
  shell: docker swarm join-token -q worker
  changed_when: False
  register: docker_worker_token
  delegate_to: "{{ groups['docker_swarm_manager'][0] }}"
  delegate_facts: True
  when: "'docker_swarm_worker' in group_names"

- name: Get the manager join-token.
  shell: docker swarm join-token -q manager
  changed_when: False
  register: docker_manager_token
  delegate_to: "{{ groups['docker_swarm_manager'][0] }}"
  delegate_facts: True
  when: "'docker_swarm_manager' in group_names
    and inventory_hostname != groups['docker_swarm_manager'][0]"

- name: Declare the address of the first Swarm manager as a fact.
  set_fact:
    docker_manager_address: "{{ docker_swarm_advertise_addr }}:{{ docker_swarm_port }}"
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: Distribute the fact containing address of the first Swarm manager.
  set_fact:
    docker_manager_address: "{{ hostvars[groups['docker_swarm_manager'][0]]['docker_manager_address'] }}"
  when: "inventory_hostname != groups['docker_swarm_manager'][0]"

- name: Join the pending Swarm worker nodes.
  shell: docker swarm join
        --token "{{ docker_worker_token.stdout }}"
        {{ docker_manager_address }}
  changed_when: False
  when: "docker_info.stdout.find('Swarm: active') == -1
    and docker_info.stdout.find('Swarm: pending') == -1
    and 'docker_swarm_worker' in group_names"

- name: Join the pending Swarm manager nodes.
  shell: docker swarm join
        --listen-addr {{ docker_swarm_listen_addr }}:{{ docker_swarm_port }}
        --advertise-addr {{ docker_swarm_advertise_addr }}
        --token "{{ docker_manager_token.stdout }}"
        {{ docker_manager_address }}
  changed_when: False
  when: "docker_info.stdout.find('Swarm: active') == -1
    and docker_info.stdout.find('Swarm: pending') == -1
    and 'docker_swarm_manager' in group_names
    and inventory_hostname != groups['docker_swarm_manager'][0]"
